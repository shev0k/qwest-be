variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

stages:
  - build
  - test
  - sonarqube-check
  - deploy

.backend:
  variables:
    ARTIFACTS_PATHS: "build/libs/*.jar"

build:
  stage: build
  extends: .backend
  script:
    - ./gradlew build
  artifacts:
    paths:
      - "$ARTIFACTS_PATHS"
    expire_in: 1 day

test:
  stage: test
  script:
    - ./gradlew test

sonarqube-check:
  stage: sonarqube-check
  extends: .backend
  image: gradle:8.2.1-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"  # fetch all the branches of the project
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ./gradlew test sonar jacocoTestReport
  allow_failure: true

deploy:
  stage: deploy
  extends: .backend
  needs:
    - sonarqube-check
    - test
    - build
  script:
    - echo "Deploying application"
    - echo "DB_USERNAME=$DB_USERNAME_STAGING"
    - echo "DB_PASSWORD=$DB_PASSWORD"
    - echo "GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY"
    - echo "JWT_SECRET=$JWT_SECRET"
    - echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    - echo "AWS_SECRET_KEY=$AWS_SECRET_KEY"
    - echo "AWS_REGION=$AWS_REGION"
    - echo "S3_BUCKET_NAME=$S3_BUCKET_NAME"
    - |
      $envVars = @(
        "DB_USERNAME=$env:DB_USERNAME_STAGING",
        "DB_PASSWORD=$env:DB_PASSWORD",
        "GOOGLE_MAPS_API_KEY=$env:GOOGLE_MAPS_API_KEY",
        "JWT_SECRET=$env:JWT_SECRET",
        "AWS_ACCESS_KEY_ID=$env:AWS_ACCESS_KEY_ID",
        "AWS_SECRET_KEY=$env:AWS_SECRET_KEY",
        "AWS_REGION=$env:AWS_REGION",
        "S3_BUCKET_NAME=$env:S3_BUCKET_NAME"
      )
      $envVars -join "`n" | Out-File -FilePath .env -Encoding utf8
    - docker-compose down
    - docker-compose build
    - docker-compose up -d

after_script:
  - echo "End CI"
