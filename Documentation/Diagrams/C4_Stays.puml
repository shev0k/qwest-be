@startuml StayListingManagement

!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

skinparam linetype ortho

title Stay Listing Management Component Diagram for QWEST

package "Domain Models" {
    class StayListing {
        -Long id
        -Author author
        -LocalDate date
        -String title
        -String featuredImage
        -List<GalleryImage> galleryImages
        -Double reviewStart
        -Integer reviewCount
        -String country
        -String street
        -String roomNumber
        -String city
        -String state
        -String postalCode
        -PropertyType propertyType
        -RentalFormType rentalFormType
        -Double acreage
        -Integer maxGuests
        -Integer bedrooms
        -Integer beds
        -Integer bathrooms
        -Integer kitchens
        -String checkInHours
        -String checkOutHours
        -List<String> specialRestrictions
        -String accommodationDescription
        -Double weekdayPrice
        -Double weekendPrice
        -Double longTermStayDiscount
        -Integer minimumNights
        -Integer maximumNights
        -Double lat
        -Double lng
        -Set<Amenity> amenities
        -List<BookingCalendar> bookingCalendar
        -Set<Author> likedByAuthors
    }

    class GalleryImage {
        -Long id
        -String imageUrl
        -StayListing stayListing
    }

    class BookingCalendar {
        -Long id
        -LocalDate date
        -Boolean isAvailable
        -StayListing stayListing
    }

    class Author {
        -Long id
        -String email
        -String firstName
        -String lastName
        -String username
        -String avatar
        -String country
        -String phoneNumber
        -String description
        -String passwordHash
        -AuthorRole role
        -Set<StayListing> stayListings
        -Set<StayListing> wishlist
    }

    enum PropertyType {
        APARTMENT, HOTEL, CONDO, CABIN, TOWNHOUSE, PENTHOUSE, COTTAGE, BUNGALOW, LOFT
    }

    enum RentalFormType {
        ENTIRE_PLACE, PRIVATE_ROOM, HOTEL_ROOM, SHARED_ROOM
    }

    enum AuthorRole {
        FOUNDER, HOST, TRAVELER, PENDING_HOST
    }

    class Amenity {
        -Long id
        -String name
        -AmenityCategory category
    }

    enum AmenityCategory {
        GENERAL_AMENITIES, ROOM_FEATURES, KITCHEN_DINING, BATHROOM_AMENITIES, LEISURE_RECREATION, ADDITIONAL_SERVICES, ENTERTAINMENT_OTHERS
    }
}

package "Controllers" {
    class StayListingController {
        +getAllStayListings() : ResponseEntity<List<StayListingDTO>>
        +getStayListingById(Long) : ResponseEntity<?>
        +createStayListing(StayListingDTO) : ResponseEntity<StayListingDTO>
        +updateStayListing(Long, StayListingDTO) : ResponseEntity<StayListingDTO>
        +deleteStayListing(Long) : ResponseEntity<Void>
    }
}

package "Services" {
    interface StayListingService {
        +findAllDto() : List<StayListingDTO>
        +findById(Long) : Optional<StayListingDTO>
        +save(StayListingDTO) : StayListingDTO
        +deleteById(Long) : void
        +findByFilters(String, LocalDate, LocalDate, Integer, List<String>, Double, Double, Integer, Integer, Integer, List<String>, Pageable) : List<StayListingDTO>
        +updateAvailableDates(Long, List<LocalDate>) : StayListingDTO
        +removeUnavailableDates(Long, LocalDate, LocalDate) : StayListingDTO
    }

    class StayListingServiceImpl {
        -StayListingRepository stayListingRepository
        -AuthorRepository authorRepository
        -AmenityRepository amenityRepository
        -StayListingMapper stayListingMapper
        -WebSocketNotificationService webSocketNotificationService
    }
}

package "Repositories" {
    interface StayListingRepository {
        +findAll() : List<StayListing>
        +findById(Long) : Optional<StayListing>
        +deleteById(Long) : void
        +findByFilters(String, LocalDate, LocalDate, Integer, List<String>, Double, Double, Integer, Integer, Integer, List<String>, Pageable) : Page<StayListing>
    }

    interface AuthorRepository {
        +findById(Long) : Optional<Author>
    }

    interface AmenityRepository {
        +findAll() : List<Amenity>
        +findById(Long) : Optional<Amenity>
    }
}

package "External Systems" {
    interface FileStorageService {
        +uploadFile(MultipartFile) : String
        +deleteFile(String) : void
    }
}

together {
    StayListingController --> StayListingService : uses
    StayListingServiceImpl --> StayListingRepository : uses
    StayListingServiceImpl --> AuthorRepository : uses
    StayListingServiceImpl --> AmenityRepository : uses
    StayListingServiceImpl --> StayListingMapper : uses
    StayListingServiceImpl --> WebSocketNotificationService : uses

    StayListing --> Author : references
    Author --> StayListing : owns
    StayListing --> Amenity : contains
    StayListing --> GalleryImage : contains
    GalleryImage --> StayListing : references
    BookingCalendar --> StayListing : references
    StayListing --> BookingCalendar : contains
    Author --> StayListing : wishlists
    StayListing --> Author : likedByAuthors

    StayListingController --> StayListing : manages
    StayListingService --> StayListing : manages
    StayListingRepository --> StayListing : manages

    StayListingServiceImpl --> FileStorageService : uses
    StayListing --> PropertyType : categorized as
    StayListing --> RentalFormType : categorized as

    AuthorRole --> Author : categorized as
    AmenityCategory --> Amenity : categorized as

}

@enduml
