@startuml QWESTComponentsLayer

!define RECTANGLE
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

skinparam linetype polyline
skinparam linetype ortho

title Component Diagram for QWEST

package "Domain Models" {
    class Author {
        -Long id
        -String email
        -String firstName
        -String lastName
        -String username
        -String avatar
        -String country
        -String phoneNumber
        -String description
        -String passwordHash
        -AuthorRole role
        -Set<StayListing> stayListings
    }

    class Amenity {
        -Long id
        -String name
        -AmenityCategory category
    }

    class StayListing {
        -Long id
        -Author author
        -LocalDate date
        -String title
        -String featuredImage
        -List<GalleryImage> galleryImages
        -Double reviewStart
        -Integer reviewCount
        -String country
        -String street
        -String roomNumber
        -String city
        -String state
        -String postalCode
        -PropertyType propertyType
        -RentalFormType rentalFormType
        -Double acreage
        -Integer maxGuests
        -Integer bedrooms
        -Integer beds
        -Integer bathrooms
        -Integer kitchens
        -String checkInHours
        -String checkOutHours
        -List<String> specialRestrictions
        -String accommodationDescription
        -Double weekdayPrice
        -Double weekendPrice
        -Double longTermStayDiscount
        -Integer minimumNights
        -Integer maximumNights
        -Double lat
        -Double lng
        -Set<Amenity> amenities
        -List<BookingCalendar> bookingCalendar
    }

    class GalleryImage {
        -Long id
        -String imageUrl
        -StayListing stayListing
    }

    class BookingCalendar {
        -Long id
        -LocalDate date
        -Boolean isAvailable
        -StayListing stayListing
    }

    enum AmenityCategory {
        GENERAL_AMENITIES, ROOM_FEATURES, KITCHEN_DINING, BATHROOM_AMENITIES, LEISURE_RECREATION, ADDITIONAL_SERVICES, ENTERTAINMENT_OTHERS
    }

    enum AuthorRole {
        TRAVELER, HOST, FOUNDER
    }

    enum PropertyType {
        APARTMENT, HOTEL, CONDO, CABIN, TOWNHOUSE, PENTHOUSE, COTTAGE, BUNGALOW, LOFT
    }

    enum RentalFormType {
        ENTIRE_PLACE, PRIVATE_ROOM, HOTEL_ROOM, SHARED_ROOM
    }
}

package "Controllers" {
    class AuthorController {
        +getAllAuthors() : ResponseEntity<List<AuthorDTO>>
        +getAuthorById(Long) : ResponseEntity<?>
        +createAuthor(AuthorDTO) : ResponseEntity<AuthorDTO>
        +updateAuthor(Long, AuthorDTO) : ResponseEntity<AuthorDTO>
        +deleteAuthor(Long) : ResponseEntity<Void>
        +login(AuthorDTO) : ResponseEntity<AuthorDTO>
        +updateAuthorAvatar(Long, MultipartFile) : ResponseEntity<AuthorDTO>
    }

    class AmenityController {
        +createAmenity(AmenityDTO) : ResponseEntity<AmenityDTO>
        +getAllAmenities() : ResponseEntity<List<AmenityDTO>>
        +deleteAmenity(Long) : ResponseEntity<Void>
    }

    class StayListingController {
        +getAllStayListings() : ResponseEntity<List<StayListingDTO>>
        +getStayListingById(Long) : ResponseEntity<?>
        +createStayListing(StayListingDTO) : ResponseEntity<StayListingDTO>
        +updateStayListing(Long, StayListingDTO) : ResponseEntity<StayListingDTO>
        +deleteStayListing(Long) : ResponseEntity<Void>
    }

    class ImageUploadController {
        +uploadImage(MultipartFile) : ResponseEntity<String>
        +deleteImage(String) : ResponseEntity<String>
        +uploadMultipleImages(List<MultipartFile>) : ResponseEntity<List<String>>
    }
}

package "Services" {
    interface AuthorService {
        +findAll() : List<AuthorDTO>
        +findById(Long) : Optional<AuthorDTO>
        +update(Long, AuthorDTO) : AuthorDTO
        +updateAvatar(Long, MultipartFile) : AuthorDTO
        +findByEmail(String) : Optional<AuthorDTO>
        +save(AuthorDTO) : AuthorDTO
        +login(AuthorDTO) : Optional<AuthorDTO>
        +deleteById(Long) : void
    }

    interface AmenityService {
        +createAmenity(AmenityDTO) : AmenityDTO
        +deleteAmenity(Long) : void
        +getAllAmenities() : List<AmenityDTO>
    }

    interface StayListingService {
        +findAllDto() : List<StayListingDTO>
        +findById(Long) : Optional<StayListingDTO>
        +save(StayListingDTO) : StayListingDTO
        +deleteById(Long) : void
    }

    interface FileStorageService {
        +uploadFile(MultipartFile) : String
        +deleteFile(String) : void
    }

    class AuthorServiceImpl {
        -AuthorRepository authorRepository
        -AuthorMapper authorMapper
        -PasswordEncoder passwordEncoder
        -JwtUtil jwtUtil
        -FileStorageService fileStorageService
    }

    class AmenityServiceImpl {
        -AmenityRepository amenityRepository
        -AmenityMapper amenityMapper
    }

    class StayListingServiceImpl {
        -StayListingRepository stayListingRepository
        -AuthorRepository authorRepository
        -AmenityRepository amenityRepository
        -StayListingMapper stayListingMapper
    }

    class S3FileStorageServiceImpl {
        -AmazonS3 s3Client
    }
}

package "Repositories" {
    interface AuthorRepository {
        +findByEmail(String) : Optional<Author>
        +findById(Long) : Optional<Author>
        +deleteById(Long) : void
    }

    interface AmenityRepository {
        +findAll() : List<Amenity>
        +findById(Long) : Optional<Amenity>
        +deleteById(Long) : void
    }

    interface StayListingRepository {
        +findAll() : List<StayListing>
        +findById(Long) : Optional<StayListing>
        +deleteById(Long) : void
    }
}

together {
    AuthorController --|> AuthorService : uses
    AmenityController --|> AmenityService : uses
    StayListingController --|> StayListingService : uses
    ImageUploadController --|> FileStorageService : uses

    AuthorServiceImpl --|> AuthorRepository : uses
    AuthorServiceImpl --|> AuthorMapper : uses
    AuthorServiceImpl --|> PasswordEncoder : uses
    AuthorServiceImpl --|> JwtUtil : uses
    AuthorServiceImpl --|> FileStorageService : uses

    AmenityServiceImpl --|> AmenityRepository : uses
    AmenityServiceImpl --|> AmenityMapper : uses

    StayListingServiceImpl --|> StayListingRepository : uses
    StayListingServiceImpl --|> AuthorRepository : uses
    StayListingServiceImpl --|> AmenityRepository : uses
    StayListingServiceImpl --|> StayListingMapper : uses

    S3FileStorageServiceImpl --|> AmazonS3 : uses
}

@enduml
